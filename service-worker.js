!function(){"use strict";const t=1603224351616,i="cache"+t,n=["client/index.3f74f9a0.js","client/about.6ba53f37.js","client/[slug].ea5436d4.js","client/index.97a4711f.js","client/client.e150c968.js"].concat(["service-worker-index.html","coloringknot.png","coloringknot.svg","favicon.png","fonts/merriweather-latin-300.woff","fonts/merriweather-latin-300.woff2","fonts/merriweather-latin-300italic.woff","fonts/merriweather-latin-300italic.woff2","fonts/merriweather-latin-400.woff","fonts/merriweather-latin-400.woff2","fonts/merriweather-latin-400italic.woff","fonts/merriweather-latin-400italic.woff2","fonts/merriweather-latin-700.woff","fonts/merriweather-latin-700.woff2","fonts/merriweather-latin-700italic.woff","fonts/merriweather-latin-700italic.woff2","fonts/merriweather-latin-900.woff","fonts/merriweather-latin-900.woff2","fonts/merriweather-latin-900italic.woff","fonts/merriweather-latin-900italic.woff2","fonts/rubik-latin-300.woff","fonts/rubik-latin-300.woff2","fonts/rubik-latin-300italic.woff","fonts/rubik-latin-300italic.woff2","fonts/rubik-latin-400.woff","fonts/rubik-latin-400.woff2","fonts/rubik-latin-400italic.woff","fonts/rubik-latin-400italic.woff2","fonts/rubik-latin-500.woff","fonts/rubik-latin-500.woff2","fonts/rubik-latin-500italic.woff","fonts/rubik-latin-500italic.woff2","fonts/rubik-latin-700.woff","fonts/rubik-latin-700.woff2","fonts/rubik-latin-700italic.woff","fonts/rubik-latin-700italic.woff2","fonts/rubik-latin-900.woff","fonts/rubik-latin-900.woff2","fonts/rubik-latin-900italic.woff","fonts/rubik-latin-900italic.woff2","fonts.css","global.css","gummy-programming.svg","highlight.css","logo-192.png","logo-512.png","manifest.json","open-doodles-sitting-and-reading.svg","profile-pic.png","rsz_florian-klauer-489-unsplash.jpg","undraw-illustration.svg","undraw_Waiting__for_you_ldha.svg","undraw_a_moment_to_relax_bbpa.svg","undraw_hacker_mindset_gjwq.svg"]),e=new Set(n);self.addEventListener("install",t=>{t.waitUntil(caches.open(i).then(t=>t.addAll(n)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",t=>{t.waitUntil(caches.keys().then(async t=>{for(const n of t)n!==i&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",i=>{if("GET"!==i.request.method||i.request.headers.has("range"))return;const n=new URL(i.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&e.has(n.pathname)?i.respondWith(caches.match(i.request)):"only-if-cached"!==i.request.cache&&i.respondWith(caches.open("offline"+t).then(async t=>{try{const n=await fetch(i.request);return t.put(i.request,n.clone()),n}catch(n){const e=await t.match(i.request);if(e)return e;throw n}}))))})}();
